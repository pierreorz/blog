<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[邓德昭的技术博客]]></title>
  <link href="http://dengdezhao.cn/atom.xml" rel="self"/>
  <link href="http://dengdezhao.cn/"/>
  <updated>2014-11-28T17:25:52+08:00</updated>
  <id>http://dengdezhao.cn/</id>
  <author>
    <name><![CDATA[pierreorz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用RIDC在webcenter portal集成ECM的文档查询功能]]></title>
    <link href="http://dengdezhao.cn/blog/2014-11-28/shi-yong-ridczai-webcenter-portalji-cheng-ecmde-wen-dang-cha-xun-gong-neng/"/>
    <updated>2014-11-28T17:17:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-11-28/shi-yong-ridczai-webcenter-portalji-cheng-ecmde-wen-dang-cha-xun-gong-neng</id>
    <content type="html"><![CDATA[<h4><i class="icon-file"></i>   需求：</h4>

<p>标准的document service很不灵活，实际开发中少不了要开发定制。那么问题来了，通过RIDC很灵活的查询出了需要的文档，如何集成到portal上去呢</p>

<h4><i class="icon-folder-open"></i> 分析：</h4>

<p>使用RIDC查询出需要的文档，存放在POJO等数据模型中
利用POJO生成dataControl，开发taskflow等UI层
将以上功能开发成为extend.spaces.webapp，扩展到webcenter spaces
以下主要展现第一步：通过RIDC查询及POJO生成数据模型。</p>

<h4><i class="icon-pencil"></i> 技术实现：</h4>

<ul>
<li>使用RIDC查询文档</li>
</ul>


<p>以下是主要查询方法, query传入的即是ECM的queryText，例如：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">dDocType</span> <span class="o">&lt;</span><span class="n">matches</span><span class="o">&gt;</span> <span class="err">`</span><span class="n">PJT</span><span class="o">-</span><span class="n">INTERFACE</span><span class="o">-</span><span class="n">DOC</span><span class="err">`</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过拼接好需要的查询条件以及用户便可以查询出文档。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>     <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="nf">search</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">,</span> <span class="n">String</span> <span class="n">query</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ServiceResponse</span> <span class="n">serviceResponse</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">query</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">IdcClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">getIdcClient</span><span class="o">();</span>
</span><span class='line'>            <span class="n">DataBinder</span> <span class="n">dataBinderReq</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">createBinder</span><span class="o">();</span>
</span><span class='line'>            <span class="n">dataBinderReq</span><span class="o">.</span><span class="na">putLocal</span><span class="o">(</span><span class="s">&quot;IdcService&quot;</span><span class="o">,</span> <span class="s">&quot;GET_SEARCH_RESULTS&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">dataBinderReq</span><span class="o">.</span><span class="na">putLocal</span><span class="o">(</span><span class="s">&quot;QueryText&quot;</span><span class="o">,</span> <span class="n">query</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>            <span class="n">dataBinderReq</span><span class="o">.</span><span class="na">putLocal</span><span class="o">(</span><span class="s">&quot;ResultCount&quot;</span><span class="o">,</span> <span class="s">&quot;100&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">serviceResponse</span> <span class="o">=</span>
</span><span class='line'>                    <span class="n">client</span><span class="o">.</span><span class="na">sendRequest</span><span class="o">(</span><span class="k">new</span> <span class="n">IdcContext</span><span class="o">(</span><span class="n">username</span><span class="o">),</span> <span class="n">dataBinderReq</span><span class="o">);</span>
</span><span class='line'>            <span class="n">DataBinder</span> <span class="n">dataBinderRes</span> <span class="o">=</span> <span class="n">serviceResponse</span><span class="o">.</span><span class="na">getResponseAsBinder</span><span class="o">();</span>
</span><span class='line'>            <span class="n">DataResultSet</span> <span class="n">resultSet</span> <span class="o">=</span>
</span><span class='line'>                <span class="n">dataBinderRes</span><span class="o">.</span><span class="na">getResultSet</span><span class="o">(</span><span class="s">&quot;SearchResults&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="n">DataObject</span> <span class="n">dataObject</span> <span class="o">:</span> <span class="n">resultSet</span><span class="o">.</span><span class="na">getRows</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Document</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Document</span><span class="o">();</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setContentId</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dDocName&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setDocumentId</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dID&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setOwner</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dDocAuthor&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dDocTitle&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setDocType</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dDocType&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setXspeciality</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;xSPECIALTY&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setXrcvMajor</span><span class="o">(</span><span class="n">dataObject</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;xRCV_MAJOR&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">Date</span> <span class="n">date</span> <span class="o">=</span> <span class="n">dataObject</span><span class="o">.</span><span class="na">getDate</span><span class="o">(</span><span class="s">&quot;dInDate&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">SimpleDateFormat</span> <span class="n">sf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy/mm/dd&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">format</span> <span class="o">=</span> <span class="n">sf</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">date</span><span class="o">);</span>
</span><span class='line'>                <span class="n">d</span><span class="o">.</span><span class="na">setDindate</span><span class="o">(</span><span class="n">format</span><span class="o">);</span>
</span><span class='line'>                <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Error Search: &quot;</span> <span class="o">+</span> <span class="n">ex</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">serviceResponse</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">serviceResponse</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="c1">//</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中Document.java即是POJO类</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Document</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">contentId</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">documentId</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">owner</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">doctype</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">securitygroup</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">dindate</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">xDesignPhase</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">xspeciality</span><span class="o">;</span><span class="c1">//send</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">xrcvMajor</span><span class="o">;</span><span class="c1">//receive</span>
</span><span class='line'>     <span class="o">......</span><span class="na">get</span> <span class="n">set</span> <span class="n">accessor</span><span class="o">......</span>
</span><span class='line'><span class="o">}</span><span class="c1">//end class</span>
</span></code></pre></td></tr></table></div></figure>


<p>创建facade类：MyCondition.java，主要是调用search方法接受RIDC查询的结果集，生成dataControl供UI层使用。参考代码如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyCondition</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">ADFLogger</span> <span class="n">LOGGER</span> <span class="o">=</span> <span class="n">ADFLogger</span><span class="o">.</span><span class="na">createADFLogger</span><span class="o">(</span><span class="n">MyCondition</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="n">receiveDocumentList</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="n">sendDocumentList</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">MyCondition</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">receiveDocumentList</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">sendDocumentList</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="cm">/*******</span>
</span><span class='line'><span class="cm">     * 初始化，调用RIDC API查询出文档数据集</span>
</span><span class='line'><span class="cm">     * *****/</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">init</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;start init....&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Object</span> <span class="n">userId</span> <span class="o">=</span> <span class="n">JSFUtils</span><span class="o">.</span><span class="na">resolveExpression</span><span class="o">(</span><span class="s">&quot;#{securityContext.userName}&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Object</span> <span class="n">projectCode</span> <span class="o">=</span> <span class="n">JSFUtils</span><span class="o">.</span><span class="na">resolveExpression</span><span class="o">(</span><span class="s">&quot;#{pageFlowScope.inputProjectCode}&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">spcCode</span> <span class="o">=</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;)(</span><span class="n">JSFUtils</span><span class="o">.</span><span class="na">resolveExpression</span><span class="o">(</span><span class="s">&quot;#{pageFlowScope.spcCode}&quot;</span><span class="o">)==</span><span class="kc">null</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="n">JSFUtils</span><span class="o">.</span><span class="na">resolveExpression</span><span class="o">(</span><span class="s">&quot;#{pageFlowScope.spcCode}&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">userId</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="s">&quot;&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">userId</span><span class="o">)){</span>
</span><span class='line'>            <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;userId is null &quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">FacesMessage</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FacesMessage</span><span class="o">(</span><span class="s">&quot;用户为空请重试!&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">JSFUtils</span><span class="o">.</span><span class="na">getFacesContext</span><span class="o">().</span><span class="na">addMessage</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;NO&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">projectCode</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="s">&quot;&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">projectCode</span><span class="o">)){</span>
</span><span class='line'>            <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;projectCode is null &quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">FacesMessage</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FacesMessage</span><span class="o">(</span><span class="s">&quot;项目ID为空请重试!&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">JSFUtils</span><span class="o">.</span><span class="na">getFacesContext</span><span class="o">().</span><span class="na">addMessage</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">msg</span><span class="o">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;NO&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="cm">/******</span>
</span><span class='line'><span class="cm">         * </span>
</span><span class='line'><span class="cm">         * 生成发出专业SQL,生成接受专业SQL</span>
</span><span class='line'><span class="cm">         * </span>
</span><span class='line'><span class="cm">         * ****/</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">sendSql</span><span class="o">=</span><span class="s">&quot; xSPECIALTY &lt;matches&gt; `NULL` &quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">receiveSql</span><span class="o">=</span><span class="s">&quot; xRCV_MAJOR &lt;matches&gt; `NULL` &quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">spcCode</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="n">spcCode</span><span class="o">.</span><span class="na">size</span><span class="o">()==</span><span class="mi">0</span><span class="o">){</span>
</span><span class='line'>            <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;spcCode is null or size is 0&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;NO&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">spcCode</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'>            <span class="n">sendSql</span><span class="o">=</span><span class="n">sendSql</span><span class="o">+</span><span class="s">&quot; &lt;OR&gt; &quot;</span><span class="o">+</span><span class="s">&quot;xSPECIALTY &lt;matches&gt; `&quot;</span><span class="o">+</span><span class="n">spcCode</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="s">&quot;` &quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="n">receiveSql</span><span class="o">=</span><span class="n">receiveSql</span><span class="o">+</span><span class="s">&quot; &lt;OR&gt; &quot;</span><span class="o">+</span><span class="s">&quot;xRCV_MAJOR &lt;matches&gt; `&quot;</span><span class="o">+</span><span class="n">spcCode</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="s">&quot;` &quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">sendSql</span><span class="o">=</span><span class="s">&quot;(&quot;</span><span class="o">+</span><span class="n">sendSql</span><span class="o">+</span><span class="s">&quot;) &lt;AND&gt; dDocType &lt;matches&gt; `PJT-INTERFACE-DOC` &lt;AND&gt; xPROJECT_NUM &lt;starts&gt; `&quot;</span><span class="o">+</span><span class="n">projectCode</span><span class="o">+</span><span class="s">&quot;`&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">receiveSql</span><span class="o">=</span><span class="s">&quot;(&quot;</span><span class="o">+</span><span class="n">receiveSql</span><span class="o">+</span><span class="s">&quot;) &lt;AND&gt; dDocType &lt;matches&gt; `PJT-INTERFACE-DOC` &lt;AND&gt; xPROJECT_NUM &lt;starts&gt; `&quot;</span><span class="o">+</span><span class="n">projectCode</span><span class="o">+</span><span class="s">&quot;`&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;sendSql:&quot;</span><span class="o">+</span><span class="n">sendSql</span><span class="o">);</span>
</span><span class='line'>        <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;receiveSql:&quot;</span><span class="o">+</span><span class="n">receiveSql</span><span class="o">);</span>
</span><span class='line'>        <span class="cm">/*** </span>
</span><span class='line'><span class="cm">         * 查询当前用户在该项目中的专业（ME,EL等)，拼接QueryText</span>
</span><span class='line'><span class="cm">         * dDocType &lt;matches&gt; `PJT-INTERFACE-DOC`</span>
</span><span class='line'><span class="cm">         * ******/</span>
</span><span class='line'>        <span class="n">UCMAdapter</span> <span class="n">ap</span><span class="o">=</span><span class="k">new</span> <span class="n">UCMAdapter</span><span class="o">();</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">sendDocumentList</span> <span class="o">=</span> <span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;)</span><span class="n">ap</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">userId</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">sendSql</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">receiveDocumentList</span> <span class="o">=</span> <span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;)</span><span class="n">ap</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="n">userId</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">receiveSql</span><span class="o">);</span>
</span><span class='line'>        <span class="n">LOGGER</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;success init...YES.&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;YES&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setReceiveDocumentList</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="n">receiveDocumentList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">receiveDocumentList</span> <span class="o">=</span> <span class="n">receiveDocumentList</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="nf">getReceiveDocumentList</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">receiveDocumentList</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSendDocumentList</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="n">sendDocumentList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">sendDocumentList</span> <span class="o">=</span> <span class="n">sendDocumentList</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Document</span><span class="o">&gt;</span> <span class="nf">getSendDocumentList</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">sendDocumentList</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定制webcenter的people connection组件]]></title>
    <link href="http://dengdezhao.cn/blog/2014-10-23/ding-zhi-webcenterde-people-connectionzu-jian/"/>
    <updated>2014-10-23T22:17:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-10-23/ding-zhi-webcenterde-people-connectionzu-jian</id>
    <content type="html"><![CDATA[<h4><i class="icon-file"></i>   需求：</h4>

<p>webcenter的people connection类似于微博的关注粉丝功能，现在需要利用程序让某一用户自动关注一批人员。比如某一用户所在项目<code>(PROJECT1)</code>下有10个成员，则该用户进入portal的时候默认就展示其项目下的10个成员在某一分组<code>(PROJECT1)</code>下。</p>

<h4><i class="icon-folder-open"></i> 分析：</h4>

<p>根据项目PROJECT1可以查询出10个成员名；
利用API将10个成员添加到Connections中；
利用API创建Connection list，也即是分组名<code>(PROJECT1)</code>；
将10个成员的Connection 添加到分组PROJECT1中。</p>

<h4><i class="icon-pencil"></i> 技术实现：</h4>

<ul>
<li>根据项目PROJECT1可以查询出10个成员名；
在AMimpl中创建查询成员名方法以List返回结果。</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'>  <span class="k">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getAllMembersByProjectId</span><span class="p">(</span><span class="n">String</span> <span class="n">proId</span><span class="p">)</span><span class="err">{</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="k">result</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span><span class="p">();</span>
</span><span class='line'>        <span class="k">result</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="ss">&quot;CG02&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">result</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="ss">&quot;CG03&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">result</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="ss">&quot;CG04&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">result</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="ss">&quot;CG05&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">result</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="ss">&quot;pierre&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">result</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="ss">&quot;weblogic&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="o">//</span><span class="n">TODO</span> <span class="err">根据项目</span><span class="n">ID</span> <span class="n">proId</span><span class="err">查询出项目所有成员以</span><span class="n">List</span><span class="err">返回</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">result</span><span class="p">;</span>
</span><span class='line'>    <span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>利用API将10个成员添加到Connections中；
oracle.webcenter.peopleconnections.connections.internal.model.ConnectionsManagerImpl.createConnection 方法可以给两个guid创建Connection</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">ConnectionsServiceFactory</span> <span class="n">fac</span><span class="o">=</span><span class="n">ConnectionsServiceFactory</span><span class="p">.</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'><span class="n">ConnectionsManagerImpl</span> <span class="n">cm</span><span class="o">=</span><span class="p">(</span><span class="n">ConnectionsManagerImpl</span><span class="p">)</span><span class="n">fac</span><span class="p">.</span><span class="n">getConnectionsManager</span><span class="p">();</span>
</span><span class='line'> <span class="n">cm</span><span class="p">.</span><span class="n">createConnection</span><span class="p">(</span><span class="n">ownerUserId</span><span class="p">,</span> <span class="n">connectUserId</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>利用API创建Connection list，也即是分组名<code>(PROJECT1)</code>；
ConnectionListsManager.createConnectionList 可以创建分组</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'> <span class="n">ConnectionsServiceFactory</span> <span class="n">fac</span><span class="o">=</span><span class="n">ConnectionsServiceFactory</span><span class="p">.</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'> <span class="n">fac</span><span class="p">.</span><span class="n">getConnectionListsManager</span><span class="p">().</span><span class="n">createConnectionList</span><span class="p">(</span><span class="ss">&quot;PROJECT1&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将10个成员的Connection 添加到分组PROJECT1中。
利用API ConnectionListsManager.addMembersToConnectionList方法可以将创建好的Connection添加到分组中去。样例代码如下：</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">ConnectionsServiceFactory</span> <span class="n">fac</span><span class="o">=</span><span class="n">ConnectionsServiceFactory</span><span class="p">.</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'><span class="n">fac</span><span class="p">.</span><span class="n">getConnectionListsManager</span><span class="p">().</span><span class="n">addMembersToConnectionList</span><span class="p">(</span><span class="n">List</span><span class="p">,</span> <span class="ss">&quot;PROJECT1&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>创建Webcenter Portal Server Extension应用，创建TaskFlow调用以上方法；发布扩展应用到spaces，重启spaces，定义resource catalog应用到portal上即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[动态改变LOV的值集]]></title>
    <link href="http://dengdezhao.cn/blog/2014-09-17/dong-tai-gai-bian-lovde-zhi-ji/"/>
    <updated>2014-09-17T18:01:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-09-17/dong-tai-gai-bian-lovde-zhi-ji</id>
    <content type="html"><![CDATA[<h4><i class="icon-file"></i>   需求：</h4>

<p>LOV的值集需要根据传入的用户角色类型(A,B,C)动态改变，A时查询所有，B时过滤字段1，C时过滤字段2.</p>

<p> <strong>基础VO的SQL如下:</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'> <span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">U</span><span class="p">.</span><span class="n">USER_ID</span><span class="p">,</span> <span class="n">U</span><span class="p">.</span><span class="n">USER_NAME</span><span class="p">,</span> <span class="n">F</span><span class="p">.</span><span class="n">FULL_NAME</span> <span class="k">AS</span> <span class="n">DESCRIPTION</span>
</span><span class='line'>  <span class="k">FROM</span> <span class="n">FND_USER</span> <span class="n">U</span><span class="p">,</span> <span class="n">PO_HEADERS_ALL</span> <span class="n">P</span><span class="p">,</span> <span class="n">PO_VENDORS</span> <span class="n">V</span><span class="p">,</span> <span class="n">PER_PEOPLE_F</span> <span class="n">F</span>
</span><span class='line'> <span class="k">WHERE</span> <span class="n">U</span><span class="p">.</span><span class="n">EMPLOYEE_ID</span> <span class="o">=</span> <span class="n">P</span><span class="p">.</span><span class="n">AGENT_ID</span>
</span><span class='line'>   <span class="k">AND</span> <span class="n">P</span><span class="p">.</span><span class="n">VENDOR_ID</span> <span class="o">=</span> <span class="n">V</span><span class="p">.</span><span class="n">VENDOR_ID</span>
</span><span class='line'>   <span class="k">AND</span> <span class="n">F</span><span class="p">.</span><span class="n">PERSON_ID</span><span class="p">(</span><span class="o">+</span><span class="p">)</span> <span class="o">=</span> <span class="n">U</span><span class="p">.</span><span class="n">EMPLOYEE_ID</span>
</span><span class='line'>   <span class="k">AND</span> <span class="n">P</span><span class="p">.</span><span class="n">APPROVED_FLAG</span> <span class="o">=</span> <span class="s1">&#39;Y&#39;</span>
</span><span class='line'>   <span class="k">AND</span> <span class="p">((</span><span class="n">P</span><span class="p">.</span><span class="n">VENDOR_ID</span> <span class="o">=</span> <span class="p">:</span><span class="n">VARVENDORID</span> <span class="k">AND</span> <span class="p">:</span><span class="n">VARUSERTYPE</span> <span class="o">=</span> <span class="s1">&#39;B&#39;</span><span class="p">)</span> <span class="k">OR</span>
</span><span class='line'>       <span class="p">(:</span><span class="n">VARUSERTYPE</span> <span class="o">=</span> <span class="s1">&#39;A&#39;</span><span class="p">)</span> <span class="k">OR</span>
</span><span class='line'>       <span class="p">(:</span><span class="n">VARUSERTYPE</span> <span class="o">=</span> <span class="s1">&#39;C&#39;</span> <span class="k">AND</span> <span class="n">U</span><span class="p">.</span><span class="n">USER_ID</span> <span class="o">=</span> <span class="p">:</span><span class="n">VARUSERID</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>创建VARUSERTYPE VARUSERID VARVENDORID 三个绑定变量。</p>

<h4><i class="icon-folder-open"></i> 创建LOV VO</h4>

<p> <strong>LVO的SQL如下:</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'> <span class="k">SELECT</span> <span class="k">NULL</span>         <span class="k">AS</span> <span class="n">USER_ID</span><span class="p">,</span>
</span><span class='line'>       <span class="k">NULL</span>         <span class="k">AS</span> <span class="n">USER_NAME</span><span class="p">,</span>
</span><span class='line'>       <span class="k">NULL</span>         <span class="k">AS</span> <span class="n">DESCRIPTION</span><span class="p">,</span>
</span><span class='line'>       <span class="p">:</span><span class="n">VARTYPE</span>     <span class="k">AS</span> <span class="n">USERTYPE</span><span class="p">,</span>
</span><span class='line'>       <span class="p">:</span><span class="n">VARVENDORID</span> <span class="k">AS</span> <span class="n">VENDORID</span><span class="p">,</span>
</span><span class='line'>       <span class="p">:</span><span class="n">VARUSERID</span>   <span class="k">AS</span> <span class="n">CURRENTUSERID</span>
</span><span class='line'>  <span class="k">FROM</span> <span class="n">DUAL</span>
</span></code></pre></td></tr></table></div></figure>


<p>技巧在这里，LVO同样创建三个绑定变量，并把绑定变量作为VO的attribute暴露出来，然后通过view Accessors传递给基础VO</p>

<h4><i class="icon-pencil"></i> 设置View Accessors</h4>

<ul>
<li>创建LOV</li>
</ul>


<p><img src="../../../wp-content/uploads/QQ20140916174007.png" alt="" /></p>

<ul>
<li>设置View Accessors</li>
</ul>


<p><img src="../../../wp-content/uploads/QQ20140916174112.png" alt="" /></p>

<p>这样就可以实现动态切换LOV的基础数据源了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[webcenter portal调用document service]]></title>
    <link href="http://dengdezhao.cn/blog/2014-08-26/webcenter-portaldiao-yong-document-service/"/>
    <updated>2014-08-26T18:46:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-08-26/webcenter-portaldiao-yong-document-service</id>
    <content type="html"><![CDATA[<p><strong>平台:</strong> webcenter 1.8</p>

<h4><i class="icon-file"></i> Webcenter Contents端配置</h4>

<blockquote><p><strong>步骤:</strong></p>

<ul>
<li>进入webcenter contents http://192.168.15.251:16210/cs/idcplg</li>
<li>展开administration目录</li>
<li>Admin Server节点</li>
<li>Component Manager 里</li>
<li>开启以下特性<code>FrameworkFolders</code>(原<code>Floder_g</code>，已被<code>FrameworkFolders</code>替代)，<code>WebCenterConfigure</code>, <code>DynamicConverter</code></li>
<li>重启UCM</li>
</ul>
</blockquote>

<h4><i class="icon-file"></i>  Webcenter Portal端配置</h4>

<blockquote><p><strong>进入Portal管理界面:</strong></p>

<ul>
<li>切换到Portals标签</li>
<li>Tools and Services菜单里</li>
<li>设置Documents服务为enabled即可</li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[创建Content Repository时出现错误]]></title>
    <link href="http://dengdezhao.cn/blog/2014-08-25/chuang-jian-content-repositoryshi-chu-xian-cuo-wu/"/>
    <updated>2014-08-25T18:02:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-08-25/chuang-jian-content-repositoryshi-chu-xian-cuo-wu</id>
    <content type="html"><![CDATA[<h4><i class="icon-file"></i><strong>创建Content Repository时出现错误：</strong></h4>

<blockquote><p><strong>NOTE:</strong></p>

<ul>
<li>Unable to load content server metadata model using GET_DOC_METADATA_INFO.</li>
<li>Permission denied. Address &#8216;XX.XX.XX.XX&#8217; is not an allowable remote socket address</li>
</ul>
</blockquote>

<h4><i class="icon-file"></i> <strong>解决方法:</strong></h4>

<blockquote><ul>
<li><p><i class="icon-pencil"></i> 找到config.cfg   <br/>
<code>/u02/app/oraucm/fmw_home/user_projects/domains/ecm_domain/ucm/cs/config/config.cfg</code></p></li>
<li><p><i class="icon-pencil"></i>在SocketHostAddressSecurityFilter值加上<code>|*.*.*.*</code>
SocketHostAddressSecurityFilter=127.0.0.1|192.168.15.163|<code>*.*.*.*</code>即可</p></li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OAF个性化Button获取页面参数]]></title>
    <link href="http://dengdezhao.cn/blog/2014-06-03/oafge-xing-hua-buttonhuo-qu-ye-mian-can-shu/"/>
    <updated>2014-06-03T11:19:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-06-03/oafge-xing-hua-buttonhuo-qu-ye-mian-can-shu</id>
    <content type="html"><![CDATA[<ul>
<li>平台: R12</li>
<li>需求: 需要个性化一个button的Destination URI属性，并添附上一个参数。</li>
</ul>


<p>实现方法：</p>

<ol>
<li><p>本来重写CO便很容易实现该需求，但是涉及到修改代码以及各个环境更新就很麻烦了，所以如果个性化button的URL是最方便了。</p></li>
<li><p>个性化又涉及到如何在URL里传递参数的问题。</p></li>
</ol>


<p>右键当前页面，查看源代码如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">id=</span><span class="s">&quot;DefaultFormName&quot;</span> <span class="na">name=</span><span class="s">&quot;DefaultFormName&quot;</span> <span class="na">style=</span><span class="s">&quot;margin:0px&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span> <span class="na">action=</span><span class="s">&quot;/OA_HTML/OA.jsp?page=/oracle/apps/pa/deliverable/webui/CrUpDeliverablePG&amp;paCallingPage=DLVLIST&amp;paCallingMode=VIEW&amp;paProjectId=106691&amp;paDeliverableId=113287&amp;paDlvrItemId=106962&amp;&amp;addBreadCrumb=RP&amp;_ti=1696581738&amp;PersonalizationParam=PersonalizationParamAdmin&amp;retainAM=Y&amp;oapc=28&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>需要将当前页面中form标签的action属性中的paDlvrItemId参数的值获取过来。拼接成形如:http://dengdezhao.cn?erpid={:paDlvrItemId}形式的URL赋给button的destinationURI属性。</p>

<ol>
<li>使用{@itemName}这种方式只能在table控件中才行，在此处不适用。因此考虑使用JS查找当前页面获取到参数然后拼接形成URL。</li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>http://192.168.15.141/login/LoginSSO.jsp?flowCode=AM02<span class="err">&amp;</span>erpid=&#39;+unescape(document.DefaultFormName.action.match(new RegExp(&quot;(^|<span class="err">&amp;</span>)&quot; + &#39;paDlvrItemId&#39; + &quot;=([^<span class="err">&amp;</span>]*)(<span class="err">&amp;</span>|$)&quot;, &quot;i&quot;))[2])+&#39;<span class="err">&amp;</span>workcode=&#39; + document.getElementById(&#39;AdditionalInfo&#39;).rows[4].cells[1].innerText + &#39;
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>将以上URL个性化赋值给button即可满足需求。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装RCU1.7遇到的小问题]]></title>
    <link href="http://dengdezhao.cn/blog/2014-04-18/an-zhuang-rcu1-dot-7yu-dao-de-xiao-wen-ti/"/>
    <updated>2014-04-18T20:24:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-04-18/an-zhuang-rcu1-dot-7yu-dao-de-xiao-wen-ti</id>
    <content type="html"><![CDATA[<ul>
<li>环境：此前安装过soa1.6，最近重新安装soa1.7时遇到的问题</li>
<li>安装Rcu1.7时，发现无法运行./rcu,错误提示如下：</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">rcuHome</span><span class="o">/</span><span class="n">jdk</span><span class="o">/</span><span class="n">jre</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="nl">java:</span> <span class="n">cannot</span> <span class="n">execute</span> <span class="n">binary</span> <span class="n">file</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>查看操作系统发现是32bit,而rcu只有64bit的。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">$getconf</span> <span class="n">LONG_BIT</span>
</span><span class='line'><span class="mi">32</span>
</span></code></pre></td></tr></table></div></figure>


<p>在32bit系统上安装64bit软件向下兼容应该是可以安装的，因此怀疑是jdk的问题。</p>

<p>修改rcu文件最后几行的jre_home 为中间件文件夹中的JDK：/home/pierre/Oracle/Middleware/jdk160_24/bin/java 后，重新运行即可解决该问题。</p>

<ul>
<li><p>成功运行rcu之后，进入配置oracle数据库信息页，一直报 invalid service 错误, 原来是service name 要加上机器名后缀 orcl.localdomain即正常。</p></li>
<li><p>因为之前安装过rcu1.6，所以需要将此前的mds删除掉，不然在创建soa domain的时候会出现错误。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定制EL function]]></title>
    <link href="http://dengdezhao.cn/blog/2014-02-07/%E5%AE%9A%E5%88%B6EL/"/>
    <updated>2014-02-07T19:24:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-02-07/定制EL</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台: Jdeveloper 12c</p></li>
<li><p>有时需要对字符串进行一些后再显示出来，可以写一个简单的taglib来实现，以下Demo是处理一个以冒号分隔的字符串，返回其中的第三个值。比如输入“aaa:bbb:ccc:ddd&#8221;，输出&#8221;ccc&#8221;。</p></li>
</ul>


<h4>实现方法</h4>

<p>创建一个空的java Project：Taglib</p>

<ul>
<li>创建Java类：SplitString.java</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">.</span><span class="na">taglib</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SplitString</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getString</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span><span class="o">[]</span> <span class="n">strings</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;:&quot;</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">strings</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">strings</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建taglib描述文件splitString.tld</li>
</ul>


<p>New -> From Gallery -> Web Tier -> JSP -> JSP Tag Library</p>

<p>类型为Deployable 文件内容如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version = &#39;1.0&#39; encoding = &#39;UTF-8&#39;?&gt;</span>
</span><span class='line'><span class="nt">&lt;taglib</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>        <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd&quot;</span>
</span><span class='line'>        <span class="na">version=</span><span class="s">&quot;2.1&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;description&gt;</span>split String<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>  <span class="nt">&lt;display-name&gt;</span>splitString<span class="nt">&lt;/display-name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tlib-version&gt;</span>1.0<span class="nt">&lt;/tlib-version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;short-name&gt;</span>splitString<span class="nt">&lt;/short-name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;uri&gt;</span>http://www.dengdezhao.cn/string<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>  <span class="nt">&lt;function&gt;</span>
</span><span class='line'>    <span class="nt">&lt;display-name&gt;</span>getString<span class="nt">&lt;/display-name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>getString<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;function-class&gt;</span>cn.dengdezhao.taglib.SplitString<span class="nt">&lt;/function-class&gt;</span>
</span><span class='line'>    <span class="nt">&lt;function-signature&gt;</span>java.lang.String getString(java.lang.String)<span class="nt">&lt;/function-signature&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/function&gt;</span>
</span><span class='line'><span class="nt">&lt;/taglib&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将该工程发布为jar包。即完成taglib的开发工作。</li>
</ul>


<h4>在工程中应用该taglib</h4>

<ul>
<li>创建测试工程ViewController</li>
</ul>


<p>右键工程属性 -> JSP Tag Libraries -> Add</p>

<p>将之前发布的Jar包添加进来。</p>

<ul>
<li>创建测试页面testTaglib.jspx</li>
</ul>


<p>内容如下 ：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;</span>
</span><span class='line'><span class="nt">&lt;jsp:root</span> <span class="na">xmlns:jsp=</span><span class="s">&quot;http://java.sun.com/JSP/Page&quot;</span> <span class="na">version=</span><span class="s">&quot;2.1&quot;</span> <span class="na">xmlns:f=</span><span class="s">&quot;http://java.sun.com/jsf/core&quot;</span> <span class="na">xmlns:myTag=</span><span class="s">&quot;http://www.dengdezhao.cn/string&quot;</span>
</span><span class='line'>          <span class="na">xmlns:af=</span><span class="s">&quot;http://xmlns.oracle.com/adf/faces/rich&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;jsp:directive.page</span> <span class="na">contentType=</span><span class="s">&quot;text/html;charset=UTF-8&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;f:view&gt;</span>
</span><span class='line'>        <span class="nt">&lt;af:document</span> <span class="na">title=</span><span class="s">&quot;testTaglib.jspx&quot;</span> <span class="na">id=</span><span class="s">&quot;d1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;af:form</span> <span class="na">id=</span><span class="s">&quot;f1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;af:outputText</span> <span class="na">id=</span><span class="s">&quot;ot1&quot;</span> <span class="na">value=</span><span class="s">&quot;#{myTag:getString(&#39;aaa:ddd:ccc&#39;)}&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/af:form&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/af:document&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/f:view&gt;</span>
</span><span class='line'><span class="nt">&lt;/jsp:root&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[由意外断电导致oracle11g启动不起来的问题解决]]></title>
    <link href="http://dengdezhao.cn/blog/2013-11-09/you-yi-wai-duan-dian-dao-zhi-oracle11gqi-dong-bu-qi-lai-de-wen-ti-jie-jue/"/>
    <updated>2013-11-09T19:24:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-11-09/you-yi-wai-duan-dian-dao-zhi-oracle11gqi-dong-bu-qi-lai-de-wen-ti-jie-jue</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台: linux + oracle 11g</p></li>
<li><p>故障: 意外断电之后，监听启动不了</p></li>
</ul>


<h4>解决方法</h4>

<p>执行<code>lsnrctrl start</code>命令时报错误代码如下：</p>

<p><code>TNS-12537</code>  <br/>
<code>TNS-12560</code>  <br/>
<code>TNS-00507</code>  <br/>
<code>Linux Error:29</code></p>

<ul>
<li><p>检查/etc/hosts文件，没有发现异常。</p></li>
<li><p>因为未改动任何配置文件，所以基本可以确定是断电造成文件损坏而引起。于是使用<code>relink all</code>看看能否解决该问题。</p></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="err">#</span> <span class="n">cd</span> <span class="n">$ORACLE_HOME</span><span class="o">/</span><span class="n">bin</span>
</span><span class='line'> <span class="err">#</span> <span class="n">relink</span> <span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行<code>relink all</code>命令之后，再执行<code>lsnrctrl start</code>时，发现不报之前的错误了，出现了新的错误：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">symbol</span> <span class="n">lookup</span> <span class="nl">error:</span> <span class="n">$ORACLE_HOME</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libclntsh</span><span class="o">.</span><span class="na">so</span><span class="o">.</span><span class="mf">11.1</span>
</span><span class='line'><span class="o">:</span> <span class="n">undefined</span> <span class="nl">symbol:</span> <span class="n">nnftboot</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>看来是这个libclntsh.so.11.1出了问题，于是尝试去下载该文件替换掉。</p></li>
<li><p>从RPM search网站上下载到oracle-instance-client的RPM文件到本地。</p></li>
<li><p>使用rpm2cpio命令抽取出里面的libclntsh.so.11.1</p></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'><span class="err">#</span><span class="n">rpm2cpio</span> <span class="n">oracle</span><span class="o">-</span><span class="n">instance</span><span class="o">-</span><span class="n">client</span><span class="o">-</span><span class="n">xxx</span><span class="o">.</span><span class="na">rpm</span> <span class="o">|</span> <span class="n">cpio</span> <span class="o">-</span><span class="n">div</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将得到的libclntsh.so.11.1文件替换掉$ORACLE_HOME/lib下的重名文件即可。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在页面碎片加载前调用逻辑]]></title>
    <link href="http://dengdezhao.cn/blog/2013-09-23/ru-he-zai-ye-mian-sui-pian-jia-zai-qian-diao-yong-luo-ji/"/>
    <updated>2013-09-23T18:32:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-09-23/ru-he-zai-ye-mian-sui-pian-jia-zai-qian-diao-yong-luo-ji</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台:Jdeveloper 12c</p></li>
<li><p>需求：在JSPX页面加载前如果需要调用逻辑可以通过重写PhaseListener实现，如果在JSFF页面碎片加载前（也即是region加载前）调用应该如何实现？</p></li>
</ul>


<p><strong>实现方法</strong></p>

<p>重写RegionController方法可以达到以上需求。</p>

<ul>
<li>重写 RegionController类，在refreshRegion方法中加入需要调用的逻辑即可在页面碎片加载之前调用。</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">oracle.adf.model.RegionContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">oracle.adf.model.RegionController</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">myController</span> <span class="kd">implements</span> <span class="n">RegionController</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">myController</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">refreshRegion</span><span class="o">(</span><span class="n">RegionContext</span> <span class="n">regionContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Implement this method</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">flag</span><span class="o">=</span><span class="n">regionContext</span><span class="o">.</span><span class="na">getRefreshFlag</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;refreshRegion...&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">validateRegion</span><span class="o">(</span><span class="n">RegionContext</span> <span class="n">regionContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Implement this method</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isRegionViewable</span><span class="o">(</span><span class="n">RegionContext</span> <span class="n">regionContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Implement this method</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// TODO Implement this method</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置页面碎片pagedef页</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;pageDefinition</span> <span class="na">xmlns=</span><span class="s">&quot;http://xmlns.oracle.com/adfm/uimodel&quot;</span> <span class="na">version=</span><span class="s">&quot;12.1.2.66.68&quot;</span> <span class="na">id=</span><span class="s">&quot;iteratorInputPageDef&quot;</span>
</span><span class='line'>                <span class="na">ControllerClass=</span><span class="s">&quot;cn.dengdezhao.myController&quot;</span>
</span><span class='line'>                <span class="na">Package=</span><span class="s">&quot;cn.dengdezhao.pageDefs&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;parameters/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;executables&gt;</span>
</span><span class='line'>    <span class="nt">&lt;variableIterator</span> <span class="na">id=</span><span class="s">&quot;variables&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/executables&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bindings/&gt;</span>
</span><span class='line'><span class="nt">&lt;/pageDefinition&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>结论</strong></p>

<p>通过重写regionController类可以实现在页面碎片加载前调用POPUP提示等之类的需求。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[控件af:iterator以及af:forEach的对比]]></title>
    <link href="http://dengdezhao.cn/blog/2013-09-23/kong-jian-af-iteratoryi-ji-af-foreachde-dui-bi/"/>
    <updated>2013-09-23T18:13:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-09-23/kong-jian-af-iteratoryi-ji-af-foreachde-dui-bi</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台:Jdeveloper 12c</p></li>
<li><p>需求：对Collection类型遍历。MB中定义两个List，如何利用iterator&amp;foreach控件将List内容显示到页面。</p></li>
</ul>


<p><strong>页面如下</strong></p>

<p>分别绑定iterBean中的两个集合类型变量，将其中的值取出来。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="nl">af:</span><span class="n">iterator</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;i1&quot;</span> <span class="n">var</span><span class="o">=</span><span class="s">&quot;each&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;#{iterBean.list}&quot;</span> <span class="n">varStatus</span><span class="o">=</span><span class="s">&quot;row&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nl">af:</span><span class="n">panelBox</span> <span class="n">text</span><span class="o">=</span><span class="s">&quot;#{each}&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;pb1&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nl">f:</span><span class="n">facet</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;toolbar&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nl">af:</span><span class="n">inputText</span> <span class="n">label</span><span class="o">=</span><span class="s">&quot;Values&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;it1&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;#{iterBean.values[row.index]}&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;/</span><span class="nl">af:</span><span class="n">panelBox</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nl">af:</span><span class="n">iterator</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">af:</span><span class="n">forEach</span> <span class="n">items</span><span class="o">=</span><span class="s">&quot;#{iterBean.testList}&quot;</span>  <span class="n">var</span><span class="o">=</span><span class="s">&quot;each&quot;</span> <span class="n">varStatus</span><span class="o">=</span><span class="s">&quot;row&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nl">af:</span><span class="n">panelBox</span> <span class="n">text</span><span class="o">=</span><span class="s">&quot;#{each.title}&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;pb2&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nl">af:</span><span class="n">outputText</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;#{row.index} #{each.title}&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;ot1&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;/</span><span class="nl">af:</span><span class="n">panelBox</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nl">af:</span><span class="n">forEach</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>BackingBean内容如下：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IteratorBean</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;1&quot;</span><span class="o">,</span><span class="s">&quot;2&quot;</span><span class="o">,</span><span class="s">&quot;3&quot;</span><span class="o">};</span>
</span><span class='line'>    <span class="n">List</span><span class="o">&lt;</span><span class="n">contentList</span><span class="o">&gt;</span> <span class="n">testList</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">contentList</span><span class="o">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTestList</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">contentList</span><span class="o">&gt;</span> <span class="n">testList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;setTestList...&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">testList</span> <span class="o">=</span> <span class="n">testList</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">contentList</span><span class="o">&gt;</span> <span class="nf">getTestList</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;getTestList...&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">testList</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValues</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">values</span> <span class="o">=</span> <span class="n">values</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">getValues</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">values</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">IteratorBean</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;A&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;B&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;C&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">contentList</span> <span class="n">a</span><span class="o">=</span><span class="k">new</span> <span class="n">contentList</span><span class="o">();</span>
</span><span class='line'>        <span class="n">a</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;aaa&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">testList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
</span><span class='line'>        <span class="n">contentList</span> <span class="n">b</span><span class="o">=</span><span class="k">new</span> <span class="n">contentList</span><span class="o">();</span>
</span><span class='line'>        <span class="n">b</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;bbb&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">testList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>        <span class="n">contentList</span> <span class="n">c</span><span class="o">=</span><span class="k">new</span> <span class="n">contentList</span><span class="o">();</span>
</span><span class='line'>        <span class="n">c</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;ccc&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">testList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;init...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setList</span><span class="o">(</span><span class="n">List</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;setList ...&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">list</span> <span class="o">=</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span> <span class="nf">getList</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;getList...&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">contentList</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTitle</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getTitle</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>测试结果</strong></p>

<p>&lt;af:iterator>只调用了一次get方法；
&lt;af:forEach>却调用了9次get方法（根据容器中数量递增）；</p>

<p><strong>结论</strong></p>

<p>&lt;af:iterator>跟&lt;af:forEach>控件都可以对容器类型遍历，只不过iterator是一次性取出容器内容，而forEach是多次取出。两控件都支持下标定位。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何获取web.xml中的context-param参数]]></title>
    <link href="http://dengdezhao.cn/blog/2013-09-04/ru-he-huo-qu-web-dot-xmlzhong-de-context-paramcan-shu/"/>
    <updated>2013-09-04T19:30:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-09-04/ru-he-huo-qu-web-dot-xmlzhong-de-context-paramcan-shu</id>
    <content type="html"><![CDATA[<p><strong>通过EL表达试获取</strong></p>

<p>以web.xml中的<context-param>参数：javax.faces.FACELETS_VIEW_MAPPINGS为例,
可通过以下EL获取。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'><span class="n">$</span><span class="o">{</span><span class="n">initParam</span><span class="o">[</span><span class="err">&#39;</span><span class="n">javax</span><span class="o">.</span><span class="na">faces</span><span class="o">.</span><span class="na">FACELETS_VIEW_MAPPINGS</span><span class="err">&#39;</span><span class="o">]}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果参数名称很简单，比如：testParameter，EL表达式也可以写成以下方式：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'><span class="n">$</span><span class="o">{</span><span class="n">initParam</span><span class="o">.</span><span class="na">testParameter</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>通过JAVA代码获取</strong></p>

<p>如果需要在MB方法中获取该参数值，可以参照以下代码：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">action</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">FacesContext</span> <span class="n">fctx</span><span class="o">=</span><span class="n">FacesContext</span><span class="o">.</span><span class="na">getCurrentInstance</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ExternalContext</span> <span class="n">ec</span><span class="o">=</span><span class="n">fctx</span><span class="o">.</span><span class="na">getExternalContext</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ServletContext</span> <span class="n">servletContext</span><span class="o">=(</span><span class="n">ServletContext</span><span class="o">)</span><span class="n">ec</span><span class="o">.</span><span class="na">getContext</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">value</span><span class="o">=</span><span class="n">servletContext</span><span class="o">.</span><span class="na">getInitParameter</span><span class="o">(</span><span class="s">&quot;javax.faces.FACELETS_VIEW_MAPPINGS&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Centos下安装mysql5.6后忘记ROOT密码，重置密码]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-25/centosxia-an-zhuang-mysql5-dot-6hou-wang-ji-rootmi-ma-%2Czhong-zhi-mi-ma/"/>
    <updated>2013-06-25T16:01:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-25/centosxia-an-zhuang-mysql5-dot-6hou-wang-ji-rootmi-ma-,zhong-zhi-mi-ma</id>
    <content type="html"><![CDATA[<p><strong>安装</strong></p>

<p>去<a href="https://edelivery.oracle.com/EPD/Search/handle_go">oracle官网</a>下载mysql5.6 for linux安装介质V38444-01.zip。  <br/>
解压缩之后</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">client</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">devel</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">embedded</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">server</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">shared</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">shared</span><span class="o">-</span><span class="n">compat</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span><span class='line'><span class="n">MySQL</span><span class="o">-</span><span class="n">test</span><span class="o">-</span><span class="n">advanced</span><span class="o">-</span><span class="mf">5.6</span><span class="o">.</span><span class="mi">12</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="na">el6</span><span class="o">.</span><span class="na">i686</span><span class="o">.</span><span class="na">rpm</span>
</span></code></pre></td></tr></table></div></figure>


<p>开始安装</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">rpm</span> <span class="o">-</span><span class="n">ivh</span> <span class="n">MySQL</span><span class="o">-*</span>
</span></code></pre></td></tr></table></div></figure>


<p>Mysql5.6的安全机制加强了，默认安装时会随机给ROOT用户生成一个密码保存在安装用户目录下/root/.mysql_secret中。由于没认真看英文文档，我直接安装完就把这个文件里的随机密码给改掉了，就无法得知ROOT初始密码，也无法登录进数据库了，囧。</p>

<p><strong>重置Mysql初始密码</strong></p>

<p>用ROOT用户登录，STOP数据库</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">init</span><span class="o">.</span><span class="na">d</span><span class="o">/</span><span class="n">mysql</span> <span class="n">stop</span>
</span></code></pre></td></tr></table></div></figure>


<p>跳过授权表启动Mysql服务器</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">mysqld_safe</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">grant</span><span class="o">-</span><span class="n">tables</span><span class="o">&amp;</span>
</span></code></pre></td></tr></table></div></figure>


<p>输入CTRL+C中断进程后应该可以看到mysqld已经在运行了</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">mysql</span> <span class="o">--</span><span class="n">user</span><span class="o">=</span><span class="n">root</span> <span class="n">mysql</span>
</span><span class='line'>
</span><span class='line'><span class="n">update</span> <span class="n">user</span> <span class="n">set</span> <span class="n">Password</span><span class="o">=</span><span class="n">PASSWORD</span><span class="o">(</span><span class="err">&#39;</span><span class="k">new</span><span class="o">-</span><span class="n">password</span><span class="err">&#39;</span><span class="o">);</span>
</span><span class='line'><span class="n">flush</span> <span class="n">privileges</span><span class="o">;</span>
</span><span class='line'><span class="n">exit</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>操作完以上变更密码的命令后，可以重启mysqld了。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">killall</span> <span class="n">mysqld_safe</span><span class="o">&amp;</span>
</span></code></pre></td></tr></table></div></figure>


<p>按CTRL+C退出，接着正常启动mysql</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">init</span><span class="o">.</span><span class="na">d</span><span class="o">/</span><span class="n">mysql</span> <span class="n">start</span>
</span></code></pre></td></tr></table></div></figure>


<p>用刚刚修改的新密码登录mysql即可</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">mysql</span> <span class="o">-</span><span class="n">uroot</span> <span class="o">-</span><span class="n">p</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OAF单选删除行功能]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-24/oafdan-xuan-shan-chu-xing-gong-neng/"/>
    <updated>2013-06-24T11:15:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-24/oafdan-xuan-shan-chu-xing-gong-neng</id>
    <content type="html"><![CDATA[<hr />

<p>平台：Jdeveloper 9i</p>

<hr />

<p><strong>一般实现步骤：</strong></p>

<ol>
<li>在VO中添加新transient属性selector，updatable设置为always。</li>
<li>在PG中给table添加singleSelection方法，并绑定view Instance为VO的instance，View Attribute为刚刚新建的transient属性seletor。</li>
<li>这样当用户勾选checkbox时，会给transient属性变量赋值为Y，因此，在删除逻辑中循环判断VO中的transient属性，当其为Y时执行remove该行即可实现选择删除功能。  <br/>
<strong>相关代码如下：</strong></li>
</ol>


<p><strong>CO中processFormRequest里添加代码如下：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="c1">//当单击deleteBtn按钮时执行AM中的deleteAutoSequenceVO方法    </span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">pageContext</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;deleteBtn&quot;</span><span class="o">)!=</span><span class="kc">null</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="n">am</span><span class="o">.</span><span class="na">invokeMethod</span><span class="o">(</span><span class="s">&quot;deleteAutoSequenceVO&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>AM中代码如下：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteAutoSequenceVO</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">OAViewObject</span> <span class="n">vo</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getChAutoSequenceVO1</span><span class="o">();</span>
</span><span class='line'>        <span class="n">RowSetIterator</span> <span class="n">iter</span> <span class="o">=</span> <span class="n">vo</span><span class="o">.</span><span class="na">createRowSetIterator</span><span class="o">(</span><span class="s">&quot;delete&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">vo</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">vo</span><span class="o">.</span><span class="na">getRowCount</span><span class="o">();</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Row</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">iter</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="s">&quot;Y&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">&quot;selector&quot;</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">vo</span><span class="o">.</span><span class="na">setCurrentRow</span><span class="o">(</span><span class="n">temp</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">vo</span><span class="o">.</span><span class="na">removeCurrentRow</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">iter</span><span class="o">.</span><span class="na">closeRowSetIterator</span><span class="o">();</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">OAException</span><span class="o">(</span><span class="s">&quot;删除成功,请点击[保存]按钮生效到数据库.&quot;</span><span class="o">,</span>
</span><span class='line'>                              <span class="n">OAException</span><span class="o">.</span><span class="na">INFORMATION</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是在实际开发中，出现一个很诡异的现象，其它页面单选删除功能都正常，某一页面单选之后却无法赋值Y给VO中的transient变量，推测可能是VO用的是复合主键或者其它框架BUG导致，无奈给单选再添加手工赋值功能。</p>

<p>选择单选控件，将其Client Action中的Action Type设置为firePartialAction Submit设置为false。准备在用户单选时调用自定义方法，给变量赋值。</p>

<p><strong>CO中processFormRequest里添加如下方法</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="s">&quot;update&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">pageContext</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="n">OAWebBeanConstants</span><span class="o">.</span><span class="na">EVENT_PARAM</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">rowRef</span> <span class="o">=</span>
</span><span class='line'>                <span class="n">pageContext</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="n">OAWebBeanConstants</span><span class="o">.</span><span class="na">EVENT_SOURCE_ROW_REFERENCE</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Row</span> <span class="n">currentRow</span> <span class="o">=</span> <span class="n">am</span><span class="o">.</span><span class="na">findRowByRef</span><span class="o">(</span><span class="n">rowRef</span><span class="o">);</span>
</span><span class='line'>            <span class="n">currentRow</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">&quot;selector&quot;</span><span class="o">,</span> <span class="s">&quot;Y&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样便实现了单选删除功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Attribute set for xxxAttribute in view object xxxVO failed问题解决]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-19/attribute-set-for-xxxattribute-in-view-object-xxxvo-failedwen-ti-jie-jue/"/>
    <updated>2013-06-19T15:50:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-19/attribute-set-for-xxxattribute-in-view-object-xxxvo-failedwen-ti-jie-jue</id>
    <content type="html"><![CDATA[<hr />

<h2>平台：Jdeveloper 9i </h2>

<p>异常描述：</p>

<p>在表增加单选checkbox时，在VO中创建transient属性selector,最终在页面中无法勾选checkbox，发现值没法保存到VO中，页面抛出该异常：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> 
</span><span class='line'><span class="kc">null</span> <span class="o">-</span> <span class="n">Attribute</span> <span class="n">set</span> <span class="k">for</span> <span class="n">Selector</span> <span class="n">in</span> <span class="n">view</span> <span class="n">object</span> <span class="n">employeeVO1</span> <span class="n">failed</span>
</span></code></pre></td></tr></table></div></figure>


<p>解决方案：</p>

<ol>
<li>检查VO中的transient属性selector是否设置为updatable</li>
<li>如果是在开发模式下，清空所有classes文件，重新编译；如果是在正式环境，删除该路径下的VO对象，可使用以下命令。</li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">exec</span> <span class="n">jdr_utils</span><span class="o">.</span><span class="na">deletedocument</span><span class="o">(</span><span class="err">&#39;</span><span class="o">/</span><span class="n">oracle</span><span class="o">/</span><span class="n">apps</span><span class="o">/</span><span class="n">dengdezhao</span><span class="o">/</span><span class="n">test</span><span class="o">/</span><span class="n">server</span><span class="o">/</span><span class="n">employeeVO</span><span class="err">&#39;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从BackingBean中调用不带fragments的taskflow]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-08/cong-backingbeanzhong-diao-yong-bu-dai-fragmentsde-taskflow/"/>
    <updated>2013-06-08T16:11:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-08/cong-backingbeanzhong-diao-yong-bu-dai-fragmentsde-taskflow</id>
    <content type="html"><![CDATA[<p>有时候需要在backingBean中调用某一taskflow, 可以使用以下代码调用。不过只适用于可单独运行的taskflow，含有page fragments的taskflow不在此范围。</p>

<p>代码如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">callTaskFlow</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">FacesContext</span> <span class="n">fctx</span> <span class="o">=</span> <span class="n">FacesContext</span><span class="o">.</span><span class="na">getCurrentInstance</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ControllerContext</span> <span class="n">cc</span> <span class="o">=</span> <span class="n">ControllerContext</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">taskflowId</span> <span class="o">=</span> <span class="s">&quot;btf_task&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">taskflowDocument</span> <span class="o">=</span> <span class="s">&quot;/WEB-INF/btf_task.xml&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="n">TaskFlowId</span> <span class="n">tid</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TaskFlowId</span><span class="o">(</span><span class="n">taskflowDocument</span><span class="o">,</span> <span class="n">taskflowId</span><span class="o">);</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">taskflowURL</span> <span class="o">=</span> <span class="n">cc</span><span class="o">.</span><span class="na">getTaskFlowURL</span><span class="o">(</span><span class="kc">false</span><span class="o">,</span> <span class="n">tid</span><span class="o">,</span> <span class="n">params</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ExtendedRenderKitService</span> <span class="n">erks</span> <span class="o">=</span>
</span><span class='line'>            <span class="n">Service</span><span class="o">.</span><span class="na">getRenderKitService</span><span class="o">(</span><span class="n">fctx</span><span class="o">,</span> <span class="n">ExtendedRenderKitService</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;window.open(\&quot;&quot;</span> <span class="o">+</span> <span class="n">taskflowURL</span> <span class="o">+</span>
</span><span class='line'>                  <span class="s">&quot;\&quot;&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;,\&quot;_self\&quot;);&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">erks</span><span class="o">.</span><span class="na">addScript</span><span class="o">(</span><span class="n">FacesContext</span><span class="o">.</span><span class="na">getCurrentInstance</span><span class="o">(),</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[<af:table>分页栏出现3个问号BUG解决]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-06/fen-ye-lan-chu-xian-3ge-wen-hao-bugjie-jue/"/>
    <updated>2013-06-06T01:58:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-06/fen-ye-lan-chu-xian-3ge-wen-hao-bugjie-jue</id>
    <content type="html"><![CDATA[<hr />

<p>平台：Jdeveloper 11.1.1.7.0</p>

<hr />

<p><strong>BUG描述</strong></p>

<p><img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130606010242.jpg" alt="../../../wp-content/uploads/QQ截图20130606010242.jpg" /></p>

<p>如上图所示，“页”字前后出现三个问号。</p>

<p><strong>原因分析</strong></p>

<p>查看LOG文件</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">RenderingContext</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">getTranslatedString</span><span class="o">&gt;</span> <span class="err">无法从外观</span> <span class="n">mySkin</span><span class="o">.</span><span class="na">desktop</span> <span class="err">获取资源关键字</span> <span class="err">页</span>
</span></code></pre></td></tr></table></div></figure>


<p>可见是RenderingContext类中getTranslatedString方法发生异常。  <br/>
查看源代码分析：</p>

<p><strong>找到源代码所在位置</strong>：</p>

<p><img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130606012628.jpg" alt="../../../wp-content/uploads/QQ截图20130606012628.jpg" /></p>

<p><strong>将JAR包解压得到RenderingContext类，反编译查看</strong></p>

<p><img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130606012734.jpg" alt="../../../wp-content/uploads/QQ截图20130606012734.jpg" /></p>

<p>结果如下<strong>RenderingContext.class</strong>：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getTranslatedString</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">key</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getSkin</span><span class="o">().</span><span class="na">getTranslatedString</span><span class="o">(</span><span class="n">getLocaleContext</span><span class="o">(),</span> <span class="n">key</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">catch</span> <span class="o">(</span><span class="n">MissingResourceException</span> <span class="n">mre</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="n">_LOG</span><span class="o">.</span><span class="na">severe</span><span class="o">(</span><span class="s">&quot;CANNOT_GET_RESOURCE_KEY&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span> <span class="n">key</span><span class="o">,</span> <span class="n">getSkin</span><span class="o">().</span><span class="na">getId</span><span class="o">()</span> <span class="o">});</span> <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;???&quot;</span> <span class="o">+</span> <span class="n">key</span> <span class="o">+</span> <span class="s">&quot;???&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可知在调用getTranslatedString获取Resource时，发生MissingResourceException异常所以返回了带&#8221;???&#8221;+Key+&#8221;???&#8221;字样的字符串。</p>

<p><strong>解决方案：</strong></p>

<p>根据以上分析基本可知出现问号的原因是在获取resourcebundle时，找不到Key为页的resource，所以直接返回了&#8221;???&#8221; + key + &#8220;???&#8221;，就出现分页显示出现问号的BUG。</p>

<p><strong>方案一：</strong>重写ResourceBundle类，增加KEY值为“页”的资源。
步骤如下：</p>

<ul>
<li>创建SkinBundle类 extends ListResourceBundle</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">.</span><span class="na">bundle</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SkinBundle</span> <span class="kd">extends</span> <span class="n">ListResourceBundle</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Object</span><span class="o">[][]</span> <span class="nf">getContents</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;executing...&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span>  <span class="k">new</span> <span class="n">Object</span><span class="o">[][]{</span> <span class="o">{</span> <span class="s">&quot;页&quot;</span><span class="o">,</span> <span class="s">&quot;页&quot;</span> <span class="o">}</span> <span class="o">};</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建trinidad-skins.xml文件注册定制化Skin</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;skins</span> <span class="na">xmlns=</span><span class="s">&quot;http://myfaces.apache.org/trinidad/skin&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;skin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;id&gt;</span>mySkin.desktop<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>        <span class="nt">&lt;family&gt;</span>mySkin<span class="nt">&lt;/family&gt;</span>
</span><span class='line'>        <span class="nt">&lt;extends&gt;</span>skyros-v1.desktop<span class="nt">&lt;/extends&gt;</span>
</span><span class='line'>        <span class="nt">&lt;render-kit-id&gt;</span>org.apache.myfaces.trinidad.desktop<span class="nt">&lt;/render-kit-id&gt;</span>
</span><span class='line'>        <span class="nt">&lt;style-sheet-name&gt;</span>css/mySkin.css<span class="nt">&lt;/style-sheet-name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;bundle-name&gt;</span>cn.dengdezhao.bundle.SkinBundle<span class="nt">&lt;/bundle-name&gt;</span>
</span><span class='line'>        <span class="c">&lt;!--&lt;bundle-name&gt;ApplicationBundle&lt;/bundle-name&gt;--&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/skin&gt;</span>
</span><span class='line'><span class="nt">&lt;/skins&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改trinidad-config.xml文件如下：</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;trinidad-config</span> <span class="na">xmlns=</span><span class="s">&quot;http://myfaces.apache.org/trinidad/config&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;skin-family&gt;</span>mySkin<span class="nt">&lt;/skin-family&gt;</span>
</span><span class='line'><span class="nt">&lt;/trinidad-config&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建css/mySkin.css文件（内容默认CSS即可）</li>
</ul>


<p>运行即发现问号消失。</p>

<p><strong>方案二：</strong>其实原理跟方案一一样，也是通过改resourcebundle实现。resourcebundle支持三种类型，一种是以上的扩展ListResourceBundle类实现，一种是通过配置文件properties实现，另外一种是xliff实现。也可创建一个ApplicationBundle.properties文件，内容如下:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">页</span> <span class="o">=</span> <span class="err">页</span>
</span></code></pre></td></tr></table></div></figure>


<p>trinidad-skins.xml里的bundle-name节点设置成ApplicationBundle也可实现同样效果。</p>

<p>定制CSS可参照<a href="http://www.dengdezhao.cn/blog/2011-06-27/%E5%AE%9A%E5%88%B6adf%E5%BA%94%E7%94%A8%E7%9A%84css/">&#8220;定制CSS&#8221;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovy在ADF中的应用]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-02/groovyzai-adfzhong-de-ying-yong/"/>
    <updated>2013-06-02T11:14:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-02/groovyzai-adfzhong-de-ying-yong</id>
    <content type="html"><![CDATA[<p>使用Groovy脚本，在开发ADF应用中可以极大地提高开发效率，实现某些看似很复杂的功能。</p>

<p>比如在empVO中获取sequence值:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="n">adf</span><span class="o">.</span><span class="na">object</span><span class="o">.</span><span class="na">getDBTransaction</span><span class="o">()</span>
</span><span class='line'><span class="n">sq</span> <span class="o">=</span> <span class="k">new</span> <span class="n">oracle</span><span class="o">.</span><span class="na">jbo</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">SequenceImpl</span><span class="o">(</span><span class="s">&quot;EMPLOYEES_SEQ&quot;</span><span class="o">,</span><span class="n">db</span><span class="o">)</span>
</span><span class='line'><span class="n">sq</span><span class="o">.</span><span class="na">getSequenceNumber</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>在empVO中获取Salary字段最大值max：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">adf</span><span class="o">.</span><span class="na">object</span><span class="o">.</span><span class="na">getRowSet</span><span class="o">().</span><span class="na">max</span><span class="o">(</span><span class="s">&quot;Salary&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>在empVO中获取Salary字段最小值min：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">adf</span><span class="o">.</span><span class="na">object</span><span class="o">.</span><span class="na">getRowSet</span><span class="o">().</span><span class="na">min</span><span class="o">(</span><span class="s">&quot;Salary&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>在empVO中获取Salary字段合计sum：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">adf</span><span class="o">.</span><span class="na">object</span><span class="o">.</span><span class="na">getRowSet</span><span class="o">().</span><span class="na">sum</span><span class="o">(</span><span class="s">&quot;Salary&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>在empVO中获取Salary字段均值avg：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">adf</span><span class="o">.</span><span class="na">object</span><span class="o">.</span><span class="na">getRowSet</span><span class="o">().</span><span class="na">avg</span><span class="o">(</span><span class="s">&quot;Salary&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>在empVO中获取Salary字段数量count：</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">adf</span><span class="o">.</span><span class="na">object</span><span class="o">.</span><span class="na">getRowSet</span><span class="o">().</span><span class="na">count</span><span class="o">(</span><span class="s">&quot;Salary&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>import JAVA类库</strong>  <br/>
导入SimpleDateFormat类，对当前日期格式化成String对象输出</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span>
</span><span class='line'><span class="n">df</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">df</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">adf</span><span class="o">.</span><span class="na">currentDate</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>获取当前行中Attribute值</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">source</span><span class="o">.</span><span class="na">Salary</span>
</span><span class='line'><span class="n">source</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">&quot;Salary&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>调用EntityImpl中的方法</strong> <br/>
在EntityImpl中定义的方法均可以通过<strong>adf.object</strong>.yourMethod()方式调用  <br/>
其它如：  <br/>
<strong>adf.object.entityState</strong>  <br/>
<strong>adf.object.postState</strong>  <br/>
<strong>adf.userSession</strong> //获得Session <br/>
<strong>adf.context</strong> //获得AdfContext对象</p>

<p><strong>调用AM中的自定义方法getHelloWorld()</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">structureDef</span><span class="o">.</span><span class="na">getApplicationModule</span><span class="o">().</span><span class="na">getHelloWorld</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Groovy脚本的用处还有很多，以上只是总结了部分常用的调用方法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用contextual event刷新Region]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-01/li-yong-contextual-eventshua-xin-region/"/>
    <updated>2013-06-01T21:20:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-01/li-yong-contextual-eventshua-xin-region</id>
    <content type="html"><![CDATA[<hr />

<p>平台： Jdev 11.1.1.7.0</p>

<h2>需求：两个region，其中一个region对数据进行修改后，需要刷新另外一个region显示   </h2>

<hr />

<h4>创建bound taskflow: btf_form</h4>

<p><img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601204146.jpg" alt="../../../wp-content/uploads/QQ截图20130601204146.jpg" /></p>

<p>taskflow只包括一个页面碎片empForm.jsff，拖入employeeVO生成af:Form。  <br/>
<img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601210114.jpg" alt="../../../wp-content/uploads/QQ截图20130601210114.jpg" /></p>

<h3>创建bound taskflow: btf_table</h3>

<p>同上，只有一个页面碎片empTable.jsff，拖入employeeVO生成af:table。   <br/>
<img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601210258.jpg" alt="../../../wp-content/uploads/QQ截图20130601210258.jpg" /></p>

<p>以上两个taskflow皆使用No Controller Transaction.</p>

<h4>添加contextual event</h4>

<p>需要在empTable.jsff页面中修改数据，单击commit按钮时，让empForm.jsff页面中的数据即时更新。因此，给commitbutton添加contextual event: saveEvent。  <br/>
<img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601210725.jpg" alt="../../../wp-content/uploads/QQ截图20130601210725.jpg" /></p>

<h4>创建mainPG页面引入以上taskflow生成region</h4>

<p>创建一个两栏jspx页面mainPG.jspx， 分别拖入以上两taskflow生成region。  <br/>
给contextual event 绑定consumer。</p>

<p>切换到mainPG.jspx页面的pagedef页面，从structure窗口中执行以下操作；  <br/>
<img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601211338.jpg" alt="../../../wp-content/uploads/QQ截图20130601211338.jpg" /></p>

<p><img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601211438.jpg" alt="../../../wp-content/uploads/QQ截图20130601211438.jpg" /></p>

<p>producer即为contextual event的事件源，由btf_table中的commitbutton产生，consumer即为btf_form中的execute消耗，即btf_table中每commit一次，btf_form即执行一次execute操作刷新页面。</p>

<p>以上只是简单了解下contextual event的工作原理，contextual event还可以带参在region之间传值等。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在ManagedBean中调用AppModuleImpl中自定义方法的两种方式]]></title>
    <link href="http://dengdezhao.cn/blog/2013-06-01/zai-manangedbeanzhong-diao-yong-appmoduleimplzhong-zi-ding-yi-fang-fa-de-liang-chong-fang-shi/"/>
    <updated>2013-06-01T10:48:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-06-01/zai-manangedbeanzhong-diao-yong-appmoduleimplzhong-zi-ding-yi-fang-fa-de-liang-chong-fang-shi</id>
    <content type="html"><![CDATA[<hr />

<h2>平台: Jdev11.1.1.7.0</h2>

<hr />

<ol>
<li><strong><strong>AM</strong></strong>中创建自定义方法sayHello</li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sayHello</span><span class="o">(</span><span class="n">String</span> <span class="n">value</span><span class="o">){</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;hello world...&quot;</span><span class="o">+</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>暴露该方法以便在ManagedBean中调用  <br/>
<img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601103416.jpg" alt="../../../wp-content/uploads/QQ截图20130601103416.jpg" /></p></li>
<li><p>从Data Controls中将该方法拖到页面生成Bindings或者手工添加该Bindings。  <br/>
<img src="../../../wp-content/uploads/QQ%E6%88%AA%E5%9B%BE20130601103826.jpg" alt="../../../wp-content/uploads/QQ截图20130601103826.jpg" /></p></li>
<li><p>为了测试方便，创建了一个inputText，并绑定该inputText的valueChangeListener为ManagedBean中的valueChange方法.</p></li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">valueChange</span><span class="o">(</span><span class="n">ValueChangeEvent</span> <span class="n">valueChangeEvent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">newValue</span> <span class="o">=</span> <span class="n">valueChangeEvent</span><span class="o">.</span><span class="na">getNewValue</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//方法一：调用bindings</span>
</span><span class='line'>        <span class="n">BindingContainer</span> <span class="n">bindings</span> <span class="o">=</span> <span class="n">ADFUtils</span><span class="o">.</span><span class="na">getBindingContainer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">OperationBinding</span> <span class="n">refreshChecklist</span> <span class="o">=</span> <span class="n">bindings</span><span class="o">.</span><span class="na">getOperationBinding</span><span class="o">(</span><span class="s">&quot;sayHello&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">refreshChecklist</span><span class="o">.</span><span class="na">getParamsMap</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;value&quot;</span><span class="o">,</span> <span class="n">newValue</span><span class="o">);</span>
</span><span class='line'>        <span class="n">refreshChecklist</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//方法二：直接调用AM，通过AM调用该方法</span>
</span><span class='line'>        <span class="n">AppModuleImpl</span> <span class="n">am</span> <span class="o">=</span> <span class="o">(</span><span class="n">AppModuleImpl</span><span class="o">)</span><span class="n">ADFUtils</span><span class="o">.</span>
</span><span class='line'>      <span class="n">getApplicationModuleForDataControl</span><span class="o">(</span><span class="s">&quot;AppModuleDataControl&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">am</span><span class="o">.</span><span class="na">sayHello</span><span class="o">(</span><span class="n">newValue</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上两种方式均可以调用AM中的自定义方法。</p>
]]></content>
  </entry>
  
</feed>
