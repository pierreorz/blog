<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ADF | 邓德昭的技术博客]]></title>
  <link href="http://dengdezhao.cn/blog/categories/adf/atom.xml" rel="self"/>
  <link href="http://dengdezhao.cn/"/>
  <updated>2014-09-17T18:06:36+08:00</updated>
  <id>http://dengdezhao.cn/</id>
  <author>
    <name><![CDATA[pierreorz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[动态改变LOV的值集]]></title>
    <link href="http://dengdezhao.cn/blog/2014-09-17/dong-tai-gai-bian-lovde-zhi-ji/"/>
    <updated>2014-09-17T18:01:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-09-17/dong-tai-gai-bian-lovde-zhi-ji</id>
    <content type="html"><![CDATA[<h4><i class="icon-file"></i>   需求：</h4>

<p>LOV的值集需要根据传入的用户角色类型(A,B,C)动态改变，A时查询所有，B时过滤字段1，C时过滤字段2.</p>

<p> <strong>基础VO的SQL如下:</strong>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'> <span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">U</span><span class="p">.</span><span class="n">USER_ID</span><span class="p">,</span> <span class="n">U</span><span class="p">.</span><span class="n">USER_NAME</span><span class="p">,</span> <span class="n">F</span><span class="p">.</span><span class="n">FULL_NAME</span> <span class="k">AS</span> <span class="n">DESCRIPTION</span>
</span><span class='line'>  <span class="k">FROM</span> <span class="n">FND_USER</span> <span class="n">U</span><span class="p">,</span> <span class="n">PO_HEADERS_ALL</span> <span class="n">P</span><span class="p">,</span> <span class="n">PO_VENDORS</span> <span class="n">V</span><span class="p">,</span> <span class="n">PER_PEOPLE_F</span> <span class="n">F</span>
</span><span class='line'> <span class="k">WHERE</span> <span class="n">U</span><span class="p">.</span><span class="n">EMPLOYEE_ID</span> <span class="o">=</span> <span class="n">P</span><span class="p">.</span><span class="n">AGENT_ID</span>
</span><span class='line'>   <span class="k">AND</span> <span class="n">P</span><span class="p">.</span><span class="n">VENDOR_ID</span> <span class="o">=</span> <span class="n">V</span><span class="p">.</span><span class="n">VENDOR_ID</span>
</span><span class='line'>   <span class="k">AND</span> <span class="n">F</span><span class="p">.</span><span class="n">PERSON_ID</span><span class="p">(</span><span class="o">+</span><span class="p">)</span> <span class="o">=</span> <span class="n">U</span><span class="p">.</span><span class="n">EMPLOYEE_ID</span>
</span><span class='line'>   <span class="k">AND</span> <span class="n">P</span><span class="p">.</span><span class="n">APPROVED_FLAG</span> <span class="o">=</span> <span class="s1">&#39;Y&#39;</span>
</span><span class='line'>   <span class="k">AND</span> <span class="p">((</span><span class="n">P</span><span class="p">.</span><span class="n">VENDOR_ID</span> <span class="o">=</span> <span class="p">:</span><span class="n">VARVENDORID</span> <span class="k">AND</span> <span class="p">:</span><span class="n">VARUSERTYPE</span> <span class="o">=</span> <span class="s1">&#39;B&#39;</span><span class="p">)</span> <span class="k">OR</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>   <span class="p">(:</span><span class="n">VARUSERTYPE</span> <span class="o">=</span> <span class="s1">&#39;A&#39;</span><span class="p">)</span> <span class="k">OR</span>
</span><span class='line'>   <span class="p">(:</span><span class="n">VARUSERTYPE</span> <span class="o">=</span> <span class="s1">&#39;C&#39;</span> <span class="k">AND</span> <span class="n">U</span><span class="p">.</span><span class="n">USER_ID</span> <span class="o">=</span> <span class="p">:</span><span class="n">VARUSERID</span><span class="p">))</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
创建VARUSERTYPE VARUSERID VARVENDORID 三个绑定变量。</p>

<h4><i class="icon-folder-open"></i> 创建LOV VO</h4>

<p> <strong>LVO的SQL如下:</strong>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'> <span class="k">SELECT</span> <span class="k">NULL</span>         <span class="k">AS</span> <span class="n">USER_ID</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>   <span class="k">NULL</span>         <span class="k">AS</span> <span class="n">USER_NAME</span><span class="p">,</span>
</span><span class='line'>   <span class="k">NULL</span>         <span class="k">AS</span> <span class="n">DESCRIPTION</span><span class="p">,</span>
</span><span class='line'>   <span class="p">:</span><span class="n">VARTYPE</span>     <span class="k">AS</span> <span class="n">USERTYPE</span><span class="p">,</span>
</span><span class='line'>   <span class="p">:</span><span class="n">VARVENDORID</span> <span class="k">AS</span> <span class="n">VENDORID</span><span class="p">,</span>
</span><span class='line'>   <span class="p">:</span><span class="n">VARUSERID</span>   <span class="k">AS</span> <span class="n">CURRENTUSERID</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">FROM</span> <span class="n">DUAL</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
技巧在这里，LVO同样创建三个绑定变量，并把绑定变量作为VO的attribute暴露出来，然后通过view Accessors传递给基础VO</p>

<h4><i class="icon-pencil"></i> 设置View Accessors</h4>

<ul>
<li><p>创建LOV
<img src="../../../wp-content/uploads/QQ20140916174007.png" alt="" /></p></li>
<li><p>设置View Accessors
<img src="../../../wp-content/uploads/QQ20140916174112.png" alt="" /></p></li>
</ul>


<p>这样就可以实现动态切换LOV的基础数据源了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定制EL function]]></title>
    <link href="http://dengdezhao.cn/blog/2014-02-07/%E5%AE%9A%E5%88%B6EL/"/>
    <updated>2014-02-07T19:24:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2014-02-07/定制EL</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台: Jdeveloper 12c</p></li>
<li><p>有时需要对字符串进行一些后再显示出来，可以写一个简单的taglib来实现，以下Demo是处理一个以冒号分隔的字符串，返回其中的第三个值。比如输入“aaa:bbb:ccc:ddd"，输出"ccc"。</p></li>
</ul>


<h4>实现方法</h4>

<p>创建一个空的java Project：Taglib</p>

<ul>
<li>创建Java类：SplitString.java</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">.</span><span class="na">taglib</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SplitString</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">getString</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">strings</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;:&quot;</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">strings</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">strings</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>创建taglib描述文件splitString.tld</li>
</ul>


<p>New -> From Gallery -> Web Tier -> JSP -> JSP Tag Library</p>

<p>类型为Deployable 文件内容如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>?xml version = &#39;1.0&#39; encoding = &#39;UTF-8&#39;?&gt;
</span><span class='line'><span class="ni">&amp;lt;</span>taglib xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>    xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd&quot;
</span><span class='line'>    version=&quot;2.1&quot; xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;description&gt;</span>split String<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>  <span class="nt">&lt;display-name&gt;</span>splitString<span class="nt">&lt;/display-name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tlib-version&gt;</span>1.0<span class="nt">&lt;/tlib-version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;short-name&gt;</span>splitString<span class="nt">&lt;/short-name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;uri&gt;</span>http://www.dengdezhao.cn/string<span class="nt">&lt;/uri&gt;</span>
</span><span class='line'>  <span class="nt">&lt;function&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>display-name<span class="ni">&amp;gt;</span>getString<span class="ni">&amp;lt;</span>/display-name<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>getString<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>function-class<span class="ni">&amp;gt;</span>cn.dengdezhao.taglib.SplitString<span class="ni">&amp;lt;</span>/function-class<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>function-signature<span class="ni">&amp;gt;</span>java.lang.String getString(java.lang.String)<span class="ni">&amp;lt;</span>/function-signature<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/function&gt;</span>
</span><span class='line'><span class="nt">&lt;/taglib&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>将该工程发布为jar包。即完成taglib的开发工作。</li>
</ul>


<h4>在工程中应用该taglib</h4>

<ul>
<li>创建测试工程ViewController</li>
</ul>


<p>右键工程属性 -> JSP Tag Libraries -> Add</p>

<p>将之前发布的Jar包添加进来。</p>

<ul>
<li>创建测试页面testTaglib.jspx</li>
</ul>


<p>内容如下 ：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;
</span><span class='line'><span class="ni">&amp;lt;</span>jsp:root xmlns:jsp=&quot;http://java.sun.com/JSP/Page&quot; version=&quot;2.1&quot; xmlns:f=&quot;http://java.sun.com/jsf/core&quot; xmlns:myTag=&quot;http://www.dengdezhao.cn/string&quot;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>      xmlns:af=&quot;http://xmlns.oracle.com/adf/faces/rich&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>jsp:directive.page contentType=&quot;text/html;charset=UTF-8&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>f:view<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>af:document title=&quot;testTaglib.jspx&quot; id=&quot;d1&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>af:form id=&quot;f1&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>af:outputText id=&quot;ot1&quot; value=&quot;#{myTag:getString(&#39;aaa:ddd:ccc&#39;)}&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/af:form<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/af:document<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/f:view<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>/jsp:root&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在页面碎片加载前调用逻辑]]></title>
    <link href="http://dengdezhao.cn/blog/2013-09-23/ru-he-zai-ye-mian-sui-pian-jia-zai-qian-diao-yong-luo-ji/"/>
    <updated>2013-09-23T18:32:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-09-23/ru-he-zai-ye-mian-sui-pian-jia-zai-qian-diao-yong-luo-ji</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台:Jdeveloper 12c</p></li>
<li><p>需求：在JSPX页面加载前如果需要调用逻辑可以通过重写PhaseListener实现，如果在JSFF页面碎片加载前（也即是region加载前）调用应该如何实现？</p></li>
</ul>


<p><strong>实现方法</strong></p>

<p>重写RegionController方法可以达到以上需求。</p>

<ul>
<li>重写 RegionController类，在refreshRegion方法中加入需要调用的逻辑即可在页面碎片加载之前调用。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">oracle.adf.model.RegionContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">oracle.adf.model.RegionController</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">myController</span> <span class="kd">implements</span> <span class="n">RegionController</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">myController</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">refreshRegion</span><span class="o">(</span><span class="n">RegionContext</span> <span class="n">regionContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Implement this method</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">flag</span><span class="o">=</span><span class="n">regionContext</span><span class="o">.</span><span class="na">getRefreshFlag</span><span class="o">();</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;refreshRegion...&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">validateRegion</span><span class="o">(</span><span class="n">RegionContext</span> <span class="n">regionContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Implement this method</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isRegionViewable</span><span class="o">(</span><span class="n">RegionContext</span> <span class="n">regionContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Implement this method</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// TODO Implement this method</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>配置页面碎片pagedef页</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;lt;</span>?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
</span><span class='line'><span class="ni">&amp;lt;</span>pageDefinition xmlns=&quot;http://xmlns.oracle.com/adfm/uimodel&quot; version=&quot;12.1.2.66.68&quot; id=&quot;iteratorInputPageDef&quot;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>            ControllerClass=&quot;cn.dengdezhao.myController&quot;
</span><span class='line'>            Package=&quot;cn.dengdezhao.pageDefs&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;parameters/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;executables&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>variableIterator id=&quot;variables&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/executables&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bindings/&gt;</span>
</span><span class='line'><span class="nt">&lt;/pageDefinition&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>结论</strong></p>

<p>通过重写regionController类可以实现在页面碎片加载前调用POPUP提示等之类的需求。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[控件af:iterator以及af:forEach的对比]]></title>
    <link href="http://dengdezhao.cn/blog/2013-09-23/kong-jian-af-iteratoryi-ji-af-foreachde-dui-bi/"/>
    <updated>2013-09-23T18:13:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-09-23/kong-jian-af-iteratoryi-ji-af-foreachde-dui-bi</id>
    <content type="html"><![CDATA[<ul>
<li><p>平台:Jdeveloper 12c</p></li>
<li><p>需求：对Collection类型遍历。MB中定义两个List，如何利用iterator&amp;foreach控件将List内容显示到页面。</p></li>
</ul>


<p><strong>页面如下</strong></p>

<p>分别绑定iterBean中的两个集合类型变量，将其中的值取出来。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">af:</span><span class="n">iterator</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;i1&quot;</span> <span class="n">var</span><span class="o">=</span><span class="s">&quot;each&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;#{iterBean.list}&quot;</span> <span class="n">varStatus</span><span class="o">=</span><span class="s">&quot;row&quot;</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">af:</span><span class="n">panelBox</span> <span class="n">text</span><span class="o">=</span><span class="s">&quot;#{each}&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;pb1&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">f:</span><span class="n">facet</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;toolbar&quot;</span><span class="o">/&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">af:</span><span class="n">inputText</span> <span class="n">label</span><span class="o">=</span><span class="s">&quot;Values&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;it1&quot;</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;#{iterBean.values[row.index]}&quot;</span><span class="o">/&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="o">;/</span><span class="nl">af:</span><span class="n">panelBox</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="o">;/</span><span class="nl">af:</span><span class="n">iterator</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">af:</span><span class="n">forEach</span> <span class="n">items</span><span class="o">=</span><span class="s">&quot;#{iterBean.testList}&quot;</span>  <span class="n">var</span><span class="o">=</span><span class="s">&quot;each&quot;</span> <span class="n">varStatus</span><span class="o">=</span><span class="s">&quot;row&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">af:</span><span class="n">panelBox</span> <span class="n">text</span><span class="o">=</span><span class="s">&quot;#{each.title}&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;pb2&quot;</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="o">;</span><span class="nl">af:</span><span class="n">outputText</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;#{row.index} #{each.title}&quot;</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;ot1&quot;</span><span class="o">/&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="o">;/</span><span class="nl">af:</span><span class="n">panelBox</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="o">;/</span><span class="nl">af:</span><span class="n">forEach</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>BackingBean内容如下：</strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">cn</span><span class="o">.</span><span class="na">dengdezhao</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IteratorBean</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;1&quot;</span><span class="o">,</span><span class="s">&quot;2&quot;</span><span class="o">,</span><span class="s">&quot;3&quot;</span><span class="o">};</span>
</span><span class='line'><span class="n">List</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">contentList</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">testList</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">contentList</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;();</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTestList</span><span class="o">(</span><span class="n">List</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">contentList</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">testList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;setTestList...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">testList</span> <span class="o">=</span> <span class="n">testList</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="n">List</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">contentList</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">getTestList</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;getTestList...&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">testList</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValues</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">values</span> <span class="o">=</span> <span class="n">values</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">getValues</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">values</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">IteratorBean</span><span class="o">(){</span>
</span><span class='line'>    <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;A&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;B&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;C&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">contentList</span> <span class="n">a</span><span class="o">=</span><span class="k">new</span> <span class="n">contentList</span><span class="o">();</span>
</span><span class='line'>    <span class="n">a</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;aaa&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">testList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
</span><span class='line'>    <span class="n">contentList</span> <span class="n">b</span><span class="o">=</span><span class="k">new</span> <span class="n">contentList</span><span class="o">();</span>
</span><span class='line'>    <span class="n">b</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;bbb&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">testList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>    <span class="n">contentList</span> <span class="n">c</span><span class="o">=</span><span class="k">new</span> <span class="n">contentList</span><span class="o">();</span>
</span><span class='line'>    <span class="n">c</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;ccc&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">testList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;init...&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setList</span><span class="o">(</span><span class="n">List</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;setList ...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">list</span> <span class="o">=</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="n">List</span> <span class="nf">getList</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;getList...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">contentList</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTitle</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">getTitle</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>测试结果</strong></p>

<p>&lt;af:iterator>只调用了一次get方法；
&lt;af:forEach>却调用了9次get方法（根据容器中数量递增）；</p>

<p><strong>结论</strong></p>

<p>&lt;af:iterator>跟&lt;af:forEach>控件都可以对容器类型遍历，只不过iterator是一次性取出容器内容，而forEach是多次取出。两控件都支持下标定位。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何获取web.xml中的context-param参数]]></title>
    <link href="http://dengdezhao.cn/blog/2013-09-04/ru-he-huo-qu-web-dot-xmlzhong-de-context-paramcan-shu/"/>
    <updated>2013-09-04T19:30:00+08:00</updated>
    <id>http://dengdezhao.cn/blog/2013-09-04/ru-he-huo-qu-web-dot-xmlzhong-de-context-paramcan-shu</id>
    <content type="html"><![CDATA[<p><strong>通过EL表达试获取</strong></p>

<p>以web.xml中的<context-param>参数：javax.faces.FACELETS_VIEW_MAPPINGS为例,
可通过以下EL获取。  <br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">$</span><span class="o">{</span><span class="n">initParam</span><span class="o">[</span><span class="err">&#39;</span><span class="n">javax</span><span class="o">.</span><span class="na">faces</span><span class="o">.</span><span class="na">FACELETS_VIEW_MAPPINGS</span><span class="err">&#39;</span><span class="o">]}</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如果参数名称很简单，比如：testParameter，EL表达式也可以写成以下方式：   <br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">$</span><span class="o">{</span><span class="n">initParam</span><span class="o">.</span><span class="na">testParameter</span><span class="o">}</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>通过JAVA代码获取</strong></p>

<p>如果需要在MB方法中获取该参数值，可以参照以下代码：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">String</span> <span class="n">action</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">FacesContext</span> <span class="n">fctx</span><span class="o">=</span><span class="n">FacesContext</span><span class="o">.</span><span class="na">getCurrentInstance</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ExternalContext</span> <span class="n">ec</span><span class="o">=</span><span class="n">fctx</span><span class="o">.</span><span class="na">getExternalContext</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ServletContext</span> <span class="n">servletContext</span><span class="o">=(</span><span class="n">ServletContext</span><span class="o">)</span><span class="n">ec</span><span class="o">.</span><span class="na">getContext</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">value</span><span class="o">=</span><span class="n">servletContext</span><span class="o">.</span><span class="na">getInitParameter</span><span class="o">(</span><span class="s">&quot;javax.faces.FACELETS_VIEW_MAPPINGS&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
